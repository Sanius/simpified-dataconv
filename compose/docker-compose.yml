version: "3"

volumes:
    postgres_data:
    solr_data:
    mysql_data:
    mongo_data:

networks:
    dataconv_network:

services:
    
    dataconv-postgres:
        image: postgres:13
        container_name: dataconv-postgres
        ports:
            - ${DATACONV_POSTGRES_PORT}:5432
        networks:
            - dataconv_network
        volumes:
            - postgres_data:/var/lib/postgresql/data
            - ./postgres:/docker-entrypoint-initdb.d
        environment:
            POSTGRES_USER: ${DATACONV_POSTGRES_USERNAME}
            POSTGRES_PASSWORD: ${DATACONV_POSTGRES_PASSWORD}
            POSTGRES_MULTIPLE_DATABASES: dataconv_ckan, dataconv_datastore, dataconv_airflow
        healthcheck:
            test: ["CMD", "pg_isready", "-d dataconv_ckan -U sandang"]

    dataconv-solr:
        container_name: dataconv-solr
        build:
            context: .
            dockerfile: solr/Dockerfile
            args:
                - SOLR_CORE=${SOLR_CORE}
                - SOLR_USER=${SOLR_USER}
                - CKAN_VERSION=${CKAN_VERSION}
        networks:
            - dataconv_network
        volumes:
            - solr_data:/opt/solr/server/solr/dataconv_ckan/data
        ports:
            - ${SOLR_PORT}:8983

    dataconv-redis:
        container_name: dataconv-redis
        image: redis:6.2.6
        ports:
            - ${REDIS_PORT}:6379
        networks:
            - dataconv_network
        restart: always
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 5s
            timeout: 30s
            retries: 50

    dataconv-mysql:
        container_name: dataconv-mysql
        image: mysql:8.0.28
        command: --default-authentication-plugin=mysql_native_password
        environment:
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        volumes:
            - mysql_data:/var/lib/mysql
            - ./mysql/db-init:/docker-entrypoint-initdb.d
        ports:
            - ${MYSQL_PORT}:3306
        networks:
            - dataconv_network
        restart: always
        cap_add:
            - SYS_NICE
        security_opt:
            - seccomp:unconfined

    dataconv-mongo:
        container_name: dataconv-mongo
        image: mongo:4.4.13
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
            - MONGO_INITDB_DATABASE=${MONGO_DB}
        volumes:
            - mongo_data:/data/
        ports:
            - ${MONGO_PORT}:27017
        networks:
            - dataconv_network
